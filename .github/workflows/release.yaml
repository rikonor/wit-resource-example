name: release

on:
  workflow_dispatch:
    inputs:
      title:
        description: 'Title for the release'
        required: true
        type: string

      description:
        description: 'Human-readable description of the release'
        required: true
        type: string

      ref:
        description: 'Commit to base the release on (defaults to `HEAD`)'
        required: false
        default: 'HEAD'
        type: string

      tag:
        description: 'Tag for the release (defaults to `anonymization-backend-<COMMIT>`)'
        required: false
        type: string

permissions:
  contents: write

env:
  NAME: anonymization-backend
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  ok:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - run: gh release list

      - name: build
        run: |
          cat data.txt | base64    > output.base64.txt
          cat data.txt | xxd -p -u > output.hex.txt

      - name: checksums
        run: |
          ARTIFACTS=(
            output.base64.txt
            output.hex.txt
          )

      - name: tag
        run: |
          COMMIT=$(git rev-parse ${{ inputs.ref }})
          git checkout ${COMMIT}

          RELEASE_TAG='${{ inputs.tag }}'
          if [[ -z "${RELEASE_TAG}" ]]; then
            COMMIT_SHORT=$(git rev-parse --short ${COMMIT})
            RELEASE_TAG="${{ env.NAME }}-${COMMIT_SHORT}"
          fi
          
          git tag ${RELEASE_TAG}
          git push origin tag ${RELEASE_TAG}

          echo "RELEASE_TAG=${RELEASE_TAG}" >> "${GITHUB_ENV}"

      - name: release notes
        run: |
          NOTES=$(mktemp)

          CODE_BLOCK='```'

          cat > ${NOTES} <<EOF
          ## Description

          ${{ inputs.description }}

          ## Checksums

          ${CODE_BLOCK}
          test
          ${CODE_BLOCK}
          EOF

          echo "NOTES=${NOTES}" >> "${GITHUB_ENV}"

      - name: release
        run: |
          gh release create \
            ${RELEASE_TAG} \
                --title ${{ inputs.title }} \
                --verify-tag \
                --draft --latest=false \
                --notes-file ${NOTES}
